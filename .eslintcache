[{"/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/App.tsx":"1","/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/index.tsx":"2","/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/components/Header.tsx":"3","/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/components/QuestionCard.tsx":"4","/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/api.ts":"5","/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/utils.ts":"6"},{"size":3266,"mtime":1608297084006,"results":"7","hashOfConfig":"8"},{"size":219,"mtime":1608296563665,"results":"9","hashOfConfig":"8"},{"size":298,"mtime":1608296751693,"results":"10","hashOfConfig":"8"},{"size":1438,"mtime":1608297809527,"results":"11","hashOfConfig":"8"},{"size":824,"mtime":1608285410841,"results":"12","hashOfConfig":"8"},{"size":94,"mtime":1608284285198,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"dpecq9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/App.tsx",["27","28"],"import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport { fetchQuestions, Difficulty, questionState } from \"./api\";\nimport \"./App.css\";\nimport { Typography, Row, Col, Tag, Button, Spin, Image } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nconst TOTAL = 10;\n\nexport type AnswerProps = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correct_answer: string;\n};\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<questionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerProps[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const quizStart = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const roundOfQuestions = await fetchQuestions(TOTAL, Difficulty.EASY);\n\n    setQuestions(roundOfQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setLoading(false);\n  };\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      // Is correct?\n      const correct = questions[number].correct_answer === answer;\n      // If correct, give add score points\n      if (correct) {\n        setScore((prev) => prev + 1);\n      }\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correct_answer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n  const nextQuestion = () => {\n    const nextQuestion = number + 1;\n\n    // check if last question\n    if (nextQuestion === TOTAL) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQuestion);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          {gameOver || userAnswers.length === TOTAL ? (\n            <Button onClick={quizStart} type=\"primary\">\n              Start the Quiz!\n            </Button>\n          ) : null}\n        </Col>\n        {!gameOver ? (\n          <Col span={24}>\n            <Tag color=\"#fd7c00\">Score: {score}</Tag>\n          </Col>\n        ) : null}\n        {loading && (\n          <Col span={24}>\n            <Spin size=\"large\" />\n          </Col>\n        )}\n      </Row>\n      <Row gutter={[16, 16]}>\n        <Col span={12} offset={6}>\n          {!loading && !gameOver ? (\n            <QuestionCard\n              questionNumber={number + 1}\n              totalQuestion={TOTAL}\n              question={questions[number].question}\n              answers={questions[number].answers}\n              userAnswer={userAnswers ? userAnswers[number] : undefined}\n              callback={checkAnswer}\n            />\n          ) : null}\n        </Col>\n        <Col span={12} offset={6}>\n          {!gameOver &&\n          !loading &&\n          userAnswers.length === number + 1 &&\n          number !== TOTAL - 1 ? (\n            <Button className=\"nextBtn\" type=\"primary\" onClick={nextQuestion}>\n              Next Question\n            </Button>\n          ) : null}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/index.tsx",[],"/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/components/Header.tsx",["29"],"/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/components/QuestionCard.tsx",[],"/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/api.ts",[],"/Users/marcus-bby/Documents/react-ts-bbys-fridays/my-app/src/utils.ts",[],{"ruleId":"30","severity":1,"message":"31","line":6,"column":10,"nodeType":"32","messageId":"33","endLine":6,"endColumn":20},{"ruleId":"30","severity":1,"message":"34","line":6,"column":51,"nodeType":"32","messageId":"33","endLine":6,"endColumn":56},{"ruleId":"30","severity":1,"message":"31","line":2,"column":10,"nodeType":"32","messageId":"33","endLine":2,"endColumn":20},"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used."]